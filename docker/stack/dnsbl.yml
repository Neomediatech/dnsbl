# dnsbl stack
# pull dnsbl git repository from https://github.com/Neomediatech/dnsbl/archive/master.zip ,
#   unzip it and put spamikaze folder on common volume
# may be config/config.php file must be moved in php/ direcotry?
# env variables to declare on portainer stack:
#  MYSQL_HOSTNAME: db (name of MYSQL instance)
#  STACK_BASE_PATH: /srv/data/docker/containers/test-dnsbl/ (base path of the stack in the host)
# don't forget to create all folders!
#

version: '3.7'

x-envs: &common-vars
  TZ: Europe/Rome
  MYSQL_ROOT_PASSWORD_FILE: /var/lib/mysql/db-root.pwd
  MYSQL_PASSWORD_FILE: /var/lib/mysql/db-user.pwd
  MYSQL_USER_FILE: /var/lib/mysql/db-user.txt
  MYSQL_HOST: ${MYSQL_HOST:-db}

services:
  db:
    image: mariadb:10
    hostname: ${MYSQL_HOST}
    deploy:
      replicas: 1    
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    ports:
      - target: 3306
        published: 23307
        protocol: tcp
        mode: host
    volumes:
      - db:/var/lib/mysql
      - sql_init:/docker-entrypoint-initdb.d
    environment:
      << : *common-vars
      MYSQL_DATABASE_FILE: /var/lib/mysql/db-name.txt
    healthcheck:
      test: ["CMD", "/bin/bash", "-c", "read p < $$MYSQL_PASSWORD_FILE ; read u < $$MYSQL_USER_FILE ; mysql -p$$p -u$$u -e status | grep Uptime || (echo \"MariaDB is down\" && exit 1)"]
      interval: 30s
      timeout: 30s
      start_period: 5s
      retries: 20
    stop_grace_period: 20s

  redis:
    image: redis:5-alpine
    hostname: redis
    environment:
      << : *common-vars
    command: ["redis-server", "--appendonly", "yes", "--bind", "0.0.0.0", "--protected-mode", "no", "--always-show-logo", "no", "--appendfsync", "no"]
    ports:
      - target: 6379
        published: 6479
        protocol: tcp
        mode: host
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 10s
      retries: 3

  app:
    image: neomediatech/php-fpm-debian:latest
    hostname: app
    volumes:
      - scripts:/var/www/html
    environment:
      << : *common-vars
    depends_on:
      - db
    stop_grace_period: 20s

  web:
    image: nginx:1.16
    hostname: web
    deploy:
      replicas: 1    
    environment:
      << : *common-vars    
    ports:
      - target: 80
        published: 28080
        protocol: tcp
        mode: host
    volumes:
      - scripts:/var/www/html:ro
      - ${STACK_BASE_PATH}/web/nginx/conf/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    hostname: phpmyadmin
    environment:
      << : *common-vars    
      PMA_HOST: ${MYSQL_HOST}
      PMA_PORT: 3306
    ports:
      - target: 80
        published: 28081
        protocol: tcp
        mode: host
    volumes:
      - db:/var/lib/mysql
    depends_on:
      - db

  cron:
    image: neomediatech/cron
    hostname: cron
    environment:
      << : *common-vars    
    volumes:
      - db:/var/lib/mysql
      - crontabs:/var/spool/cron/crontabs
      - cron_scripts:/scripts      
    depends_on:
      - db

  powerdns:
    image: neomediatech/powerdns
    hostname: powerdns
    environment:
      << : *common-vars    
      DB_HOST: ${MYSQL_HOST}
      DB_NAME: pdns
    ports:
      - target: 53
        published: 28053
        protocol: tcp
        mode: host
      - target: 53
        published: 28053
        protocol: udp
        mode: host
    volumes:
      - db:/var/lib/mysql
      - sql_init:/data/sql
    depends_on:
      - db

  pdnsmanager:
    image: neomediatech/pdnsmanager
    hostname: pdnsmanager
    environment:
      << : *common-vars
      DB_HOST: ${MYSQL_HOST}
      DB_NAME: pdnsmanager
    ports:
      - target: 80
        published: 28082
        protocol: tcp
        mode: host
    volumes:
      - ${STACK_BASE_PATH}/pdnsmanager/config/:/etc/pdnsmanager/
    depends_on:
      - db
      - powerdns

volumes:
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STACK_BASE_PATH}/redis/data

  db:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STACK_BASE_PATH}/db/data

  scripts:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STACK_BASE_PATH}/scripts/data
      
  sql_init:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STACK_BASE_PATH}/db/sql
  
  crontabs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STACK_BASE_PATH}/cron/crontabs

  cron_scripts:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STACK_BASE_PATH}/cron/scripts
